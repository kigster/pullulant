#!/usr/bin/env bash
#_______________________________________________________________________________
#
# (c) 2016 Konstantin Gredeskoul
# https://github.com/kigster
#
# For project Pullulant
# https://github.com/kigster/pullulant/
#
# MIT License
#_______________________________________________________________________________
#

function use_newer_bash() {
  local newer_bash=
  [[ -n "$(grep \"${newer_bash}\" /etc/shells)" ]] && return
  run "echo ${newer_bash} | sudo tee -a /etc/shells"
  local current_shell=$(finger ${USER} | grep Shell | awk 'BEGIN{FS="Shell: "}{print $2}')
  if [[ "${current_shell}" != "${newer_bash}" && -s "${newer_bash}" ]] ; then
    run "sudo chsh -s ${newer_bash} ${USER}"
  fi
}

function bash_it_component() {
  local args=($*)
  local what=$1
  local action=$2
  local list=${args[@]:2}
  for item in ${list[@]}; do
    run "echo bash -l -c 'bash-it $action $what $item'"
  done
}

function bash_it {
  status=0
  [[ -d ${bash_it_home} && -n "${opts_force}" ]] && run "rm -rf ${bash_it_home}"

  [[ ! -d ${bash_it_home} ]] && {
    run "git clone https://github.com/kigster/bash-it.git ${bash_it_home}"
    run "rm -f ~/.bash_profile.bak"
    run "cd ${bash_it_home} && echo 'n'| ./install.sh && cd -"
    run "sed -i.bak 's/bobby/powerline-multiline/g' ~/.bash_profile"
  }

  [[ -n "${bash_it_aliases}"     ]] && bash_it_component "enable" "alias"       $bash_it_aliases
  [[ -n "${bash_it_plugins}"     ]] && bash_it_component "enable" "plugin"      $bash_it_plugins
  [[ -n "${bash_it_completions}" ]] && bash_it_component "enable" "completion"  $bash_it_completions

  $(grep bashrc ~/.bash_profile > /dev/null)
  if [ $? -eq 1 ]; then
    run "echo 'appending sourcing of ~/.bashrc to .bash_profile...'"
    run "echo 'source ~/.bashrc' >> ~/.bash_profile"
  fi

  use_newer_bash
}


#!/usr/bin/env bash
#_______________________________________________________________________________
#
# (c) 2016 Konstantin Gredeskoul
# https://github.com/kigster
#
# For project Pullulant
# https://github.com/kigster/pullulant/
# Portions of this code were developed with sponsorship from GoShippo.com
#
# MIT License
#_______________________________________________________________________________
#

function setup {
  export original_dir=$(pwd)
  export pu_home="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

  cd ${pu_home}
  source "lib/pu-loader"
}

setup

while getopts "ar:SBLIRKFCfqnvlhHxpZ" opt; do
  case $opt in
    a)
    export Application__runners=${installers}          ;;
    r)
    [[ "${OPTARG}" == "sudo-enable"  ]] && export skip_sudo_disable=true
    [[ "${OPTARG}" == "sudo-disable" ]] && export sudoers_enabled=true
    if [ -z "${Application__runners}" ]; then
      export Application__runners="$OPTARG"
    else
      export Application__runners="${Application__runners} $OPTARG"
    fi                                    ;;

    #========================= Runner Stuff =========================

    S)
    export opts_skip_sprout_wrap=yes      ;;
    B)
    export opts_skip_brew_upgrade=yes     ;;
    f)
    export opts_force=" --force "         ;;
    I)
    export opts_ignore_errors=yes         ;;

    #========================= Home Brew ============================

    F)
    export opts_brew_formulae_only=yes    ;;
    C)
    export opts_brew_casks_only=yes       ;;
    L)
    export opts_brew_link_only=yes        ;;
    R)
    export opts_brew_reinstall=yes        ;;
    K)
    export opts_brew_link_force=yes       ;;

    #========================= Other          =======================

    Z)
    export opts_change_shell_to_zsh=yes     ;;

    #========================= Output Control =======================
    p)
    export opts_suppress_headers=yes      ;;
    q)
    export opts_quiet=yes                 ;;
    n)
    export opts_dryrun=yes                ;;
    v)
    export opts_verbose=" -v ";           ;;

    #========================= Help and Info ========================

    x)
    ./$0 -H | iconv -c -t ascii | sed "s,\x1B\[[0-9;]*[a-zA-Z],,g" > doc/help
    cat doc/help; Application.finish;                 ;;
    h)
    pu-welcome-screen-short
    pu-print-help
    Application.finish;                               ;;
    H)
    pu-welcome-screen-short
    pu-print-help
    pu-print-detailed-usage
    Application.finish;                               ;;

    l)
    pu-short-header
    pu-installers-helpers
    Application.finish;                               ;;
    \?)
    pu-print-help
    printf "${bakred}ERROR: $* is an invalid option :( ${txtrst}\n" >&2
    Application.abort 126
    ;;
    :)
    printf "${bakred}ERROR: option -$opt requires an argument ${txtrst}\n" >&2
    Application.abort 127
    ;;
  esac
done


#______________________________________________________________________________
#
export args=$*

Application.main args

# EOF

#!/usr/bin/env bash
#_______________________________________________________________________________
#
# (c) 2016-2017 Konstantin Gredeskoul
# https://github.com/kigster/pullulant/
#
# MIT License
#_______________________________________________________________________________

alias 'gpnew'='git push -u origin master'
alias 'gcb'='git branch --no-color | grep -F "*" | cut -f 2 -d " "'  # git current branch
alias 'gcmr'='git reset; git add README.md; git commit -m "Updated README"; git push '
alias 'gst'='git status'
alias 'gpr'='git pull --rebase'
alias 'gprs'='git stash && git pull --rebase && git stash pop'
alias 'gs'='git status'
alias 'gc'='git co'
alias 'gd'='git diff'
alias 'gm'='git commit -m'
alias 'gl'='git log'
alias 'gpp'='git pull && git push'
alias 'ga'='git add'
alias 'gaa'='git add -A'
alias 'gap'='git add -p'
alias 'gpp'='git pull --rebase && git push'

function git::upstream() {
  local this_branch=$(gcb)
  this_branch=${this_branch:-master}
  git branch --set-upstream-to=origin/${this_branch} ${this_branch}
}

##..................................................................................
##
##    function: git.clone repo-name [ user | $USER ]
## description: git glone from current user's github repo. Also aliased to 'gcl'
##          eg: git.clone ruby-web # assumign $USER == "wanelo"
##
function git.clone() {
  local repo=$1
  local who=${2:-${USER}}
  local folder=${3}
  [[ -z "$repo" ]] && {
    printf "${bldwht}Usage: gcl repo [github-username] [folder]${txtrst}\n"
    printf "${bldwht}   OR: gcl username/repo${txtrst}\n\n"
    printf "${bldgrn}   eg: gcl project ${txtrst}\n"
    printf "${bldgrn}   eg: gcl project kigster${txtrst}\n"
    printf "${bldgrn}   eg: gcl kigster/project ${txtrst}\n"
    return
  }

  [[ ${repo} =~ '/' ]] && full_repo="git@github.com:${repo}"
  [[ ${repo} =~ '/' ]] || full_repo="git@github.com:${who}/${repo}"

  git clone ${full_repo} ${folder}
  [[ $? != 0 ]] && printf "${bldred}can't clone ${bldgrn}${full_repo}${txtrst}\n" >&2
}

alias gcl='git.clone'

#!/usr/bin/env bash
# vim: ft=bash ts=2 sw=2
#_______________________________________________________________________________
#
# Â© 2016-2021 Konstantin Gredeskoul
# https://github.com/kigster/pullulant/
#
# MIT License
#_______________________________________________________________________________

function git.aliases() {
  alias gp='git push -v'
  alias gpnew='git push -u origin master'
  alias gcb='git branch -no-color | grep -F "*" | cut -f 2 -d " "' # git current branch
  alias gcmr='git reset; git add README.md; git commit -m "Updated README"; git push '

  # git submoduleas
  alias gsi='git submodule update --recursive --init'
  alias gsu='git submodule update --recursive --init'

  # git statuses
  alias gs='git status'
  alias gst='git status -short'
  alias gss='git show -stat'
  alias gsl='git status -long -M -b -ahead-behind'

  if (command -v ydiff >/dev/null 2>&1); then
    alias gd='git diff | ydiff'
    alias gds='git diff -s -w 0 | ydiff'
    alias gdc='git diff --cached -b | ydiff'
    alias glp='git diff -L | ydiff'
    alias glps='git diff -l -s -w 0 | ydiff'
  else
    alias gd='git diff'
    alias gdc='git diff --cached -b'
    alias glp='git log -p -2'
  fi

  alias gl='git log'

  alias gc='EDITOR=/usr/local/bin/vim git commit -S --verbose'
  alias gcm='EDITOR=/usr/local/bin/vim git commit -S -m'
  alias gca='EDITOR=/usr/local/bin/vim git commit -S --amend --verbose'

  alias grs='git reset'
  alias grsh='git reset -hard'
  alias gtits='git reset -hard && git clean -dfx'
  alias gtots='git clean -dry-run -dfx'

  alias gco='git checkout'
  alias gcob='git checkout -b'
  alias gcom='git checkout master'
  alias gcod='git checkout develop'

  alias gco='git checkout'
  alias gcob='git checkout -b'
  alias gcom='git checkout master'
  alias gcod='git checkout develop'

  alias gll="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative"
  alias glg="git log --graph --all --pretty=format:'%C(yellow)%h -%C(auto)%d %C(bold cyan)%s %C(bold white)(%cr)%Creset %C(dim white)<%an>'"

  alias gpf='git push --force'
  alias gprs='git stash && git pull -rebase && git stash pop'
  alias gpr="git.smart.pull"
  alias gpp='git pull --rebase && git push'

  alias grbc='git rebase -continue'
  alias grba='git rebase -abort'

  alias ga='git add'
  alias gaa='git add -A'
  alias gap='git add -p'
  alias gclean='git clean -d -f -x'
  alias gcl='git.clone'

  alias gbs='git branch --sort=committerdate  | tail -20'
}

# @description Convert remotes with https to git@ format.
# @example gitconfig.convert.to.ssh -/
function git.config.convert.to() {
  local to="$1"
  shift

  local from
  local regex

  if [[ "${to}" == git@ ]]; then
    from="https://"
    regex='s#url = https://github\.com/\([^/]*\)/#url = git@github\.com:\1/#g'
  elif [[ "${to}" == https:// ]]; then
    from="git@"
    regex='s#url = git@github\.com:\([^/]*\)/#url = https://github\.com/\1/#g'
  fi

  local dir="${1:-${PWD}}"
  local gcf=".git/config"
  local gcfp="${dir}/${gcf}"

  [[ -f "${gcfp}" ]] || {
    echo "No ${gcf} file was found under path ${dir}" >&2
    return 1
  }

  grep -q "url = ${from}" "${gcfp}" || {
    echo "No ${from} remotes were detected in your ${gcf}" >&2
    return 0
  }

  eval "sed -i'' -E '${regex}' \"${gcfp}\""

  echo "Converted remotes on your ${gcf} to use SSH."
  grep "url = ${to}" "${gcfp}"

  return 0
}

function git.config.convert.to.ssh() {
  git.config.convert.to git@ "$@"
}

function git.config.convert.to.https() {
  git.config.convert.to https:// "$@"
}

[[ -n $(alias gpr 2>/dev/null) ]] && unalias gpr

function git.smart.pull() {
  command -v git-smart-pull >/dev/null || {
    command -v gem >/dev/null && {
      echo "Installing git-smart Ruby Gem, please wait..." >&2
      gem install -N git-smart >/dev/null
      hash -r 2>/dev/null
    }
  }
  if command -v git-smart-pull >/dev/null; then
    echo "Activating git-smart-pull gem gpr alias..."
    alias gpr="git-smart-pull"
    git-smart-pull
  else
    echo "Gem git-smart-pull not found, activating regular rebase -autostash"
    alias gpr="git pull -rebase -autostash"
  fi
}

function pu.load.git() {
  git.aliases
  
  if [[ $(basename ${SHELL}) == "bash" ]]; then
    [[ -f ~/.bash_pu_git_completions ]] && source ~/.bash_pu_git_completions
  fi

  return 0
}

pu.load.git


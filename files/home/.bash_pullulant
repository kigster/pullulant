# vim: ft=bash
# shellcheck disable=SC2154,SC1090
# Â© 2016-2021  Konstantin Gredeskoul
# https://github.com/kigster
#
# For project Pullulant
# https://github.com/kigster/pullulant/
#
# MIT License

set +e

export pfx="${bldpur}[pullulant]${clr}"

function pu_source() {
  local errors=0
  for file in "$@"; do
    if [[ -s "${file}" ]]; then
      ((DEBUG)) && printf "[debug] loading file: [${bldgrn}%40.40s${clr}]"
      source "${file}"
      local code=$?
      if ((code)); then
        ((DEBUG)) && printf " (exit code: ${code} [ ðŸ’£ ])\n"
        code=$((code + 1))
      else
        ((DEBUG)) && echo
        ((DEBUG)) && echo "WARNING: sourced file ${file} returned non-zero code ${code}" >&2
      fi
    else
      ((DEBUG)) && echo
      ((DEBUG)) && echo "WARNING: sourced file ${file} does not exist" >&2
    fi
  done
  return ${code}
}

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export MANPATH="/usr/local/opt/gnu-sed/libexec/gnuman:$MANPATH"
export PGUSER=postgres
export EDITOR=vim
export PAGER='less -R'
export RI='-f ansi'
export HISTCONTROL=ignoredups

declare -a pullulant_plugins=(
  aliases
  brew
  colors
  completion
  docker
  functions
  git
  git_completion
  grep
  pgsql
  pprocs
  services
  tmux
  user
)

if [[ -z $(echo "${pullulant_plugins[*]}" | grep "$1") ]] ; then
  for plugin in "$@"; do
    file="${HOME}/.bash_pu_${plugin}"  
    pu_source "${file}"
  done
else
  for plugin in "${pullulant_plugins[@]}"; do
    file="${HOME}/.bash_pu_${plugin}"  
    pu_source "${file}"
  done
fi

# Load rbenv and pyenv without th expensive eval.
for env in rbenv pyenv; do
  dir="${HOME}/.${env}/shims"
  if [[ -d "${dir}" ]] ; then
    export PATH="${dir}:$PATH"
  fi
done

source ~/.bash_pu_bash_it tango developer




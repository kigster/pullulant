" vim: ft=vim

" Required for operations modifying multiple buffers like rename.
set hidden

" note that if you are using Plug mapping you should not use `noremap` mappings.
nmap <F5> <Plug>(lcn-menu)
" Or map each action separately
nmap <silent>K <Plug>(lcn-hover)
nmap <silent> gd <Plug>(lcn-definition)
nmap <silent> <F2> <Plug>(lcn-rename)

let g:airline#extensions#sorbet#auto = 0
function! MyCustomAirlineInit() abort
  let g:airline_section_x = airline#section#create(['filetype', g:airline_symbols.space, 'sorbet'])
endfunction

au User AirlineAfterInit ++once call MyCustomAirlineInit()"

let g:codeowners_only_dot_github = 1

"let g:user_emmet_install_global = 0
"autocmd FileType html,css EmmetInstall
"let g:user_emmet_leader_key='<C-Y>'

" Once vim-javascript is installed you enable flow highlighting
let g:javascript_plugin_flow = 1

let g:rigel_airline = 1
let g:airline_theme = 'powerlineish'

let g:user_emmet_settings = {
      \  'ruby' : {
      \    'extends' : 'html',
      \    'filters' : 'c',
      \  },
      \  'xml' : {
      \    'extends' : 'html',
      \  },
      \  'haml' : {
      \    'extends' : 'html',
      \  },
      \}


if executable('fzf')
  if executable('ag')
    let FZF_DEFAULT_COMMAND='ag -p ~/.gitignore -g ""'
  endif
  " Remap ctrl-P to execute fzf.
  nnoremap <silent> <C-p> :Files<CR>
  " Show previews with fzf window.
  command! -bang -nargs=? -complete=dir Files
    \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)
  let g:fzf_layout = { 'down': '~40%' }
  nmap <C-p> :FZF<CR>
endif

" Source custom configs (not under version control).
if filereadable(glob("~/.vimrc.local"))
  source ~/.vimrc.local
endif

let g:eruby_default_subtype = "yaml"

let g:eruby_extensions = { "js": "javascriptreact", "yaml": "yaml" }

fun! s:DetectRuby()
    if getline(1) =~# '^#!.*\(ruby\|rake\)$'
        set ft=ruby
    endif
endfun
autocmd BufNewFile,BufRead * call s:DetectRuby()

fun! s:DetectNode()
    if getline(1) =~# '^#!.*node$'
        set ft=javascript
    endif
endfun
autocmd BufNewFile,BufRead * call s:DetectNode()

fun! s:DetectBash()
    " if getline(1) ~ '#!/usr/bin/env bash|#!/bin/bash|#!/bin/sh|#!/bin/zsh|#!/usr/bin/env sh'
    if getline(1) =~# '^#!.*\(bash\|sh\)$'
        set ft=bash
    endif
endfun
autocmd BufNewFile,BufRead * call s:DetectBash()

let g:rubycomplete_load_paths = ["./app/classes", "./app/models", "./app/controllers", "./lib", "./lib/tasks", "./spec"]

set t_Co=256
set termguicolors

"colorscheme brogrammer
"colorscheme ayu
"colorscheme molokai
colorscheme monokai_pro

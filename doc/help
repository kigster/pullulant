 ___________________________________________________________________________________
|                                                                                   |
|  Pullulant (or gently: 'pu')                                                 |
|  Development Environment Installer v1.1.2.                                        |
|  Git rev b5bcd2f.                                                                 |
|___________________________________________________________________________________|
                                                                                    
Installers:
   permissions, homebrew, nodejs, hostnames, rubyinstall, sproutwrap, monofonts,    
   postgresql, zsh, preferences, home, atom, osx    
                                                                                    
Helpers:
   brew-update, brew-upgrade, brew-wipe, postgres-install, postgres-reinstall,    
   postgres-start, postgres-stop, postgres-wipe, sudo-disable, sudo-enable    
                                                                                    

Usage: ./pu -a [-S] [-B] [-Z] [-I]                [ output ]
       ./pu -r 'runner1 runner2 ...' [-S] [-B]    [ output ]
       ./pu -r homebrew [-L|-F|-C] [-R] [-f] [-K] [ output ]
   Or: ./pu [-l|-h|-H|-x]


Where, runner is either an installer or a helper, and output is '[-n] [-q|-v] [-p]'

Global Flags:
Full run:
  -a          run [a]ll installers in their order
  -S          [S]proutwrap is disabled during the install
  -B          [B]rew-upgrade is disabled
  -I          [I]gnore errors and continue. Do not stop when runners fail.
              In this mode any command that failed will have it's STDOUT and
              STDERR captured for later debugging.

Partial run (multiple runners can be listed in quotes or multiple -r flags):
  -r runner   run only a specified [r]unner (helper or installer)
              eg: ./pu -r 'zsh osx' -r home

  -f          [F]orce  applies to some installers, ie. brew (--force) and
              zsh (overwrites current)

Homebrew control:
              -C -F -L flags allow picking specific subset of the install.
              The flags can mix. Adding all three is the same as adding none.

  -L          Only [L]ink packages configured for brew linking
  -C          Only [C]asks are installed from a configured list
  -F          Only [F]ormulas are installed from a configured list

              These apply to all brew commands:
  -R          [R]einstall each formulae during brew install
  -K          Relin[K] all brew formulas/casks during install

Zsh
  -Z          Do not change the default shell to Zsh (it's still installed)

Output control:
  -p          su[p]press pretty section headers for more compact output
  -q          [q]uiet mode: stop printing commands before and after run.
  -v          [v]erbose - show each command's output, and add -v to some
  -n          dry-ru[n] print commands, but don't actually run them.

Help & Info:
  -l          [l]ist available runners  helpers and installers
  -h          this [h]elp message
  -H          this help message, and explanation of helpers and installers
  -x          same as -H but in plain ascii (also saves into doc/help)

Examples:
    ./pu -a                         # install everything
    ./pu -r reinstall-postgres      # run just reinstall-postgres
    ./pu -r brew-wipe -r homebrew   # wipe and reinstall homebrew
    ./pu -r homebrew -F -pv         # only brew formulas verbose
    ./pu -aSB                       # install everything, minus
                                    # homebrew and sprout-wrap

  Runner:
      Most common usage is with the -a  flag, that runs all installers.
      Installers are bash modules located in the ./installers folder. Each
      installer has a bash function that matches the name of the file.

      The -r flag can be supplied more than once, or once but with multiple
      arguments in quotes, eg -r 'runner1 runner2' or -r runner1
      -r runner2. Presence of this flag indicates that only specified
      runnings will run.

  Helpers
      Helpers are similar to installers, but they are not ordered, and are
      not included in the default install. They are meant to be used ad-hoc.

      You can add new installers and helpers by adding new files in the
      corresponding folders with bash functions matching the name.

      For example, to enable password-less sudo, use 'sudo-enable' helper:

      ./pu -r sudo-enable
[0;34m[0;34m